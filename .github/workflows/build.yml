name: Build and Deploy JESD Eye Scan GTK

env:
  MAJOR: 0 
  MINOR: 1
  PATCH: 0+${{ github.sha }}
  SOURCE_CODE: jesd-eye-scan-gtk-source
  CONTAINER_BASE_NAME: kuiper-container-basic

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - '20[1-9][0-9]_R[1-9]'
  pull_request:
    branches:
      - main
      - '20[1-9][0-9]_R[1-9]' 

jobs:  
  build_and_deploy_for_kuiper:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker_image: aandrisa/kuiper_basic_64:latest
            image_arch: linux/arm64
            architecture: arm64
          - docker_image: aandrisa/kuiper_basic_32:latest
            image_arch: linux/arm/v7
            architecture: armhf
    steps:
    - name: Checkout code repository
      uses: actions/checkout@v4
      with: 
        path: ${{env.SOURCE_CODE}}
        
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Start persistent container
      run: |
        docker run -d \
            --platform ${{matrix.image_arch}} \
            --name ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} \
            -v "$GITHUB_WORKSPACE/${{env.SOURCE_CODE}}:/workspace" \
            -w /workspace \
            ${{matrix.docker_image}} tail -f /dev/null

    - name: Install dependencies
      run: |
        docker exec ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} sudo apt update
        docker exec ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} sudo apt install -y build-essential cmake gnuplot libgtk-3-dev libncurses-dev

    - name: Build code with Cmake 
      run: |
        docker exec ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} sh -c "cmake -DENABLE_PACKAGING=ON -DARCHITECTURE='${{matrix.architecture}}' -DPROJECT_VERSION='${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}' ."
        docker exec ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} sh -c "make"

    - name: Create .deb package artifact
      run: |
        docker exec ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} sh -c "make package"
    
    - name: Install application
      env:
        DEB_FILE_NAME: jesd-eye-scan-gtk_${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}_${{matrix.architecture}}
      run: |
        docker exec ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} sh -c "sudo dpkg -i ${{env.DEB_FILE_NAME}}.deb"
        
    - name: Verify install locations 
      env: 
        EXECUTABLE_LOCATION: /usr/local/bin
        SHARE_LOCATIONS: /usr/local/share
      run: |
        docker exec ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}} sh -c "[ -e '${{env.EXECUTABLE_LOCATION}}/jesd_status' ] \
        && [ -e '${{env.EXECUTABLE_LOCATION}}/jesd_eye_scan' ] \
        && [ -e '${{env.SHARE_LOCATIONS}}/jesd/jesd.glade' ] \
        && [ -e '${{env.SHARE_LOCATIONS}}/jesd/ADIlogo.png' ] \
        && sudo [ -e '${{env.SHARE_LOCATIONS}}/applications/jesd_eye_scan.desktop' ] \
        && echo 'Installation successful' \
        || { echo 'Installation failed, some files are missing'; exit 1; }"
        
    - name: Copy .deb from container to host
      env:
        DEB_FILE_NAME: jesd-eye-scan-gtk_${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}_${{matrix.architecture}}
      run: |
          docker cp ${{env.CONTAINER_BASE_NAME}}-${{matrix.architecture}}:/workspace/${{env.DEB_FILE_NAME}}.deb ./${{env.DEB_FILE_NAME}}.deb

    - name: Upload .deb artifacts to github
      uses: actions/upload-artifact@v4
      with:
        name: jesd-eye-scan-gtk-${{matrix.architecture}}
        path: jesd-eye-scan-gtk_${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}_${{matrix.architecture}}.deb
        if-no-files-found: error
  build_and_deploy_for_ubuntu:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ${{env.SOURCE_CODE}}
    steps:
    - name: Checkout code repository
      uses: actions/checkout@v4
      with: 
        path: ${{env.SOURCE_CODE}}
        
    - name: Install dependencies 
      run: |
        sudo apt update
        sudo apt install -y build-essential cmake gnuplot libgtk-3-dev libncurses-dev
        
    - name: Build and create package
      run: | 
        cmake -DENABLE_PACKAGING=ON -DPROJECT_VERSION='${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}' .
        make 
        make package
        
    - name: Upload .deb artifacts to github
      uses: actions/upload-artifact@v4
      with:
        name: jesd-eye-scan-gtk-ubuntu-24
        path: ${{env.SOURCE_CODE}}/jesd-eye-scan-gtk_${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}_all.deb
        if-no-files-found: error
